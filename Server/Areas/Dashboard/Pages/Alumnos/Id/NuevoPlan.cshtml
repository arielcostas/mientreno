@page "/Dashboard/Alumnos/{id}/NuevoPlan"
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model CrearPlanModel
@{
	ViewData["Title"] = @Model.Alumno.NombreCompleto;
}

<main id="main-dialogue">
	<h1>Nuevo plan</h1>

	<form method="POST">

		<div class="form-group">
			<label asp-for="Form.Nombre">@AppStrings.Input_Name</label>
			<input asp-for="Form.Nombre" class="form-control"/>
		</div>

		<div class="form-group">
			<label asp-for="Form.Descripcion">@AppStrings.descripcion</label>
			<textarea asp-for="Form.Descripcion" class="form-control" rows="5"></textarea>
		</div>

		<hr/>

		<div class="title-with-action">
			<h2>
				Ejercicios
			</h2>

			<button class="button button-primary" type="button" onclick="addEjercicio()">+ Añadir</button>
		</div>

		<div id="ejercicio-container">
			<div class="form-group form-group-ejercicio">
				@{
					var ejerciciosTransformed = Model.Ejercicios.Select(e => new
					{
						Text = e.Nombre,
						Value = e.Id.ToString(),
						GroupId = e.Categoria!.Nombre
					});

					var categoriasSelect = new SelectList(ejerciciosTransformed,
						"Value",
						"Text",
						"GroupId",
						"GroupId"
						);
				}

				<select asp-for="Form.Ejercicios[0].Ejercicio" asp-items="categoriasSelect" class="form-control" title="Ejercicio"></select>

				<input asp-for="Form.Ejercicios[0].Series" class="form-control" placeholder="Series" type="number" min="0"/>
				<input asp-for="Form.Ejercicios[0].Repeticiones" class="form-control" placeholder="Reps." type="number" min="0"/>
				<input asp-for="Form.Ejercicios[0].Minutos" class="form-control" placeholder="Min." type="number" min="0"/>
			</div>
		</div>

		<hr />
		
		<button class="button button-primary" type="submit">+ @AppStrings.Action_Create</button>

	</form>
</main>

<script>
		const el0 = document.querySelector("#ejercicio-container > div");
		const button = document.querySelector("#ejercicio-container > button");
		
		function addEjercicio() {
			// Clone the first element
			const el = el0.cloneNode(true);
			
			// Clear the values of the two inputs
			el.querySelector("select").selectedIndex = 0;
			el.querySelectorAll("input[type=number]").forEach(node => node.value = "");
			
			// Change the name of the inputs
			el.querySelectorAll("input, select").forEach(node => {
				const name = node.getAttribute("name");
				node.setAttribute("name", name.replace("0", document.querySelectorAll(".form-group-ejercicio").length));
			});
			
			// Append the element before the button
			el0.parentNode.insertBefore(el, button);
			
		}
	</script>