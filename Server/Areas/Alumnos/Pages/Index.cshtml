@page
@using Mientreno.Server.Data.Models
@using Mientreno.Server.Service
@model AlumnoIndexModel
@{
	ViewData["Title"] = "Dashboard";
}

<main id="main-container">
	<h2>@AppStrings.hello, @Model.Alumno.Nombre</h2>

	<h3>@AppStrings.Text_Alumnos_ScheduledJornadas</h3>

	@{
		var entrenamientosPublicados = Model.Alumno
			.JornadasEntrenamientos
			.Where(j => j.Estado == EstadoRutina.Publicada)
			.ToList();
	}
	
	@if (entrenamientosPublicados.Count == 0)
	{
		<p>@AppStrings.Text_Alumnos_NoJornadasScheduled</p>
	}

	<ul>
		@foreach (var jornada in entrenamientosPublicados)
		{
			var badgeColour = jornada.Estado switch
			{
				EstadoRutina.Borrador => "bad",
				EstadoRutina.Publicada => "warning",
				EstadoRutina.EnCurso => "warning",
				EstadoRutina.Finalizada => "good",
				EstadoRutina.Evaluada => "good",
				_ => "bad"
				};

			var badgeText = jornada.Estado switch {
				EstadoRutina.Borrador => AppStrings.Noun_EstadoRutina_Borrador,
				EstadoRutina.Publicada => AppStrings.Noun_EstadoRutina_Publicada,
				EstadoRutina.EnCurso => AppStrings.Noun_EstadoRutina_EnCurso,
				EstadoRutina.Finalizada => AppStrings.Noun_EstadoRutina_Finalizada,
				EstadoRutina.Evaluada => AppStrings.Noun_EstadoRutina_Evaluada,
				_ => throw new ArgumentOutOfRangeException()
				};
			
			<li>
				<span class="badge badge-@badgeColour">@badgeText</span>
				-
				<a class="link link-text"
				   href="Alumnos/Plan?p=@jornada.Id">
					@if (jornada.Nombre.IsNullOrWhiteSpace())
					{
						<i>@AppStrings.Noun_JornadaEntrenamiento_NoName</i>
					}

					@jornada.Nombre
				</a >
			</li>
		}
	</ul>
</main>